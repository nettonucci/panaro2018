<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIUAAAB4CAYAAADc1jH7AAAABGdBTUEAALGPC/xhBQAAEFRJREFUeF7t
        nXlQVEcex5P8s5utrcrGaDZ75NjN7tZuauPm3lRSiVbiasylJqsoCAzDJZfAAHILCCLHcMxwKOKBRgOa
        GI94Ja7iehAQEFQghpVE0YjGIyYRuWR+279HzzjO60Fg3jBvZvpb9akY5r3u97q/092/7n5v7uLi4uLi
        4uLi4uLi4uLishNpa7vf0hzpXuqofH7qZii9Va6hqvBId1L+kR5wVHJreqDkaG8svV2uocjRTYHkEWNU
        tPRcpLfMdSc5gyn0FNV2fU9vm2swOZopsFXY3nYTcsh/WZ/nVHfpWjt1v6e3z8WSo5kCxxANl/uh5aoO
        1NXsYzIOd+k2tXJjmJWjmuJMpw6+vq4jLQP7uKzDN3SNF/qzaDFwGcuRTYG03wDQ1LKPxZZke2v/YloU
        XHo5uimQc106DEvZxxNjlNb3JNPi4EI5gykEY9zQwfrmPuY5eYSNzb3f0iLhchZTIGeJMTAywWNY5xbX
        9Z6lxeLcciZTIO2Eqo5+syFrYW1Xf7tOdy8tHueUs5lCT9MgIau6uktX+f33v6JF5HxyVlMgbT/pINuM
        MbKrunSN529G0mJyLjmzKU4T2sk4g5UOgi3Jjta+bFpUziNnNoWeb0nIWlzPDllx2rykviePFpdziJti
        ADTGB019QnjKSreiqbufFpnji5viFvqQFVsH03Q1hKI6JzEGN4WYqvPm5zLIALSz6So8QovPMcVNweb4
        FfNzGVlfdOm2fNn5W1qEjiduCvOcIiGrWWOQkLWpw0EjE26KwcFVVlY+CIase7/uc7xVVm6KO4OrrEvN
        rbKS/MqO9aTQ4nQMcVMMDTTGByfMzGUQKpp7KmmR2r+4KYYOhqyfnuoT8jDNV1vbvZ8Wqf3LEU1x4mo/
        nO8Gq9BBqOkQh6zcFDIHd1Opq7utSr7JFj9uCo4IbgqOCG4KjghuCo4IbgqOCG4KjghuCo4IbgqOCG4K
        jghuCjtG29BP0IH64BVI21IPccu3QUTmcghJzITguMUQHL8YQhZmgiqzFOJKtkHq5jpQH7gM2qM64dz8
        I+xFMW4KO0JT1wf5tX2QXHEIgmJSwctLCZ7uc0Hh4U7+7TUk8Fg8x0uhhKDoFEguPwj5db0DadN8uClk
        D6mw+l6IX7ETlL5+pELdmJU9YhQKIU1vX39IWPUZaI7eBG1dHzeFHMFvbs6hyxAUmwYerrPBS6lkV6rE
        eLi5QGRCmq6urm4WLVb7lmOYohfyqn+EeeELwHMY3YLUuLu7Q0RERH9JSclYWrz2KSlMUUD617eXt8P0
        FeesyrQVZ8Fv0yXhGQx93tqj/RCZtQIU2OczKkoEafqF8YSnp9C1BMUsgojslRC77BOIX7lTIHbpJuFv
        OAZRki5CQY4VziHnMtM0gZhDl5+f30WL2P4khSmK6vtgTHgj/GbBcavxYOQxeH/1OcGA+nzV/+0gleXB
        rBhjFApSqcQ081RxwiAxr6aLmKmPdDckLTOvPhIgn2lqe4Vj8490QcrGKgiISBAMgmmy8jJmzpw5ujVr
        1kygRW0/sgdTPBhxDAI3kxaCViBWZlzJloFvL6My9Cg83cE3KAzStp4g5wxUsOm1DxdMA68jbetx8AmY
        T/IY3JTYpYSGhi6kxW0fkrspsIUI3HzZkJeWRBUhCUsGbcqxovzDo8mg8+pAa2B0rVKCaasPXAS/+ZGk
        5TBvDgW51piYmA5a5PKXnE3xEMF9fYehideS0M+fVACr4PUoCFn7zlrVDKZgXpl7Twt5s65Jj5+fn328
        Pkmqgeazma3wovqUpLxT2g5a2uTjgNIvOJxZ2Ai2DpE5ZaQlYb/sbDTQ1vdAVN66QbsUHx+f07To5Ssp
        TGFtNKSiA6ISmYWMuM+ZBRm7/0dalNFrHcxCriHzP6fBw9WFea2ISqX6hha/PCV3U+DALipvLbNwEQ+3
        2ZBf/aPheC3parSk5ZIa42saCpra62YHwjjGKC0tla8x5G6KJbu+MjshhWGmtq7TcGwhGYQ+ntAMj8U1
        ScrDMSegSAhLxdc3GAUNN82GrnPnzoWtW7eG0WqQl+RsigJSEZ5z5zAL1dPdFfJrrhuOzTh8A8aoGpgD
        VkvBCGgkpkC09V1m114wXN2zZ899tCrkIylMgXF7SuV1WLTfMpJJGobZyro+mJ+cyyxMBSlk9f7zhvyz
        q7rgAZUV50ksMEV+TTfkHPyOmNtVfB+kG0lMTJRfRCKFKTAkvT+sER6KImGkBbya/7Uh2sg5fJX9DSPN
        sbAySY8rbuizqiEQi0xBSVzzufheCB4eHlBWVjaeVoc8JJUpLJ2nGBfRaHgJmab+JgSo4pmF6Bs4X/hc
        yPdoLzwW38RMT0qkMIWWjC98A0KY9xQUFCSviS25mOLPSS2GdY3cL34CTzdGc+sxF3IP3prd9PjwotDC
        sNKTEilMgeQcvMRs/XBsUVFR8SKtEttLDqbAig3cfMWQnipjuajgkKAFyYZuAyMNbF1Y6UmNVKbAHWBB
        UQuZ95adnf0drRLbSzJThDWQyj02IsaSMYG+lSg41s9c+cRvWO6BS4Y8p688J0yDsypRaiQzBUFd+a3Q
        4pnen6urK9Aqsb2kMAWClWoJ+nSy919gNrE+fv5Cv4zHFJMK+jUxE6sCrYGUpsB7UHqJF/NwwFlSUjKV
        VottJZUppCKmcKOowJC45VtvHfPZD0JFsSrQGkhpCiSmYAPzHpctWyaPjTlyMoWG9Lm+jEUvz7luwnY7
        /XFBZPzhuq5j1JjzwXlDqCwFuDmI1Rr6+vrK442+cjJF4XEynmCsMGIBFjTiMxfs8+wNXPFlTWbJZlwh
        lSmwnx8JSxtuNctCYbG+QYEhwmfG+dkzuL1PqfQW3aeLiwu0tbXZfiJLClNg9HFf6FEhihguGMrq++u8
        mk6mKfABHOxaTPO1V/BRBAyvTe/Tzc0N9u3b50KrxnaSwhSFxBQjnTN4OPaEIfrIOXSFaYrwxUWiPO0a
        Mj4JS9WK7hMnscrLy7kp/hDfbDAFhqOsrfq4hd80T3tHtWSp6D49PT1xnwU3xSNxTSYthdgUqvRiUZ52
        jZmWAucq1q1b5zimGBPeAONIPD9sIo4J52M6edXXhWVx08IKjk0ln0sXEtoaHFMECw87336fuPFmz549
        jmEKJLe6e8To08DVT9aYAjfsOlr04e03T3Sfs2fPhpaWlsm0amwnqUwhBYUncN1D3H14kr8VHHe0eQqx
        +R1unkIKsKXwDQgWFRZuyTN+F0T6wRuQtr9zVDG+TkvJrbrKnLwi6Gi12FZyMgXCXDZXKCD5wwOGYwI2
        XxEeJcRFsdFgLBlES7n2sXBtpfgeCWq1uptWi20lN1Nk7Gxlbo33DQ4z2nHVZ7cLYvgMi888RmtIwtEl
        S5a8RavFtpLCFLjh5a8pLfBk6skR8cSiLw1haUGjjjnYxL9pjtww5Pl6wRlmBVoDKU2RV/MDs+vAQSat
        EttLClNIsfMqYse1gfRIDB+SkCkqNCQsrVDYOY7HoYnGki6ElZ7USGYKcm+hi8TzE0hsbOwlWiW2lxxM
        gTyZ9pXhSSy1mY02OLGFT17p83X/sGNUdl9JZQpNbSd4uImfY8FJq1WrVr1Cq8T2kospcJu+3hT4dLm5
        nc8BkQsNkQh2W39e2MxMT0qkMIXwPCy5dtY9Ea7R6pCH5GIKZNqKc4buIWtvO3PAia8aSv2kwZB3MTGQ
        tbsRKUyRtqVRuHbT+8FWIisr6ylaHfKQFKbAHda+H30H8zZdsggfkoZ+tza2BoER7Gc/cKCWV0PHIDT/
        B1TWM4alptDU3gBPt9nMewkLC5NXK4GSwhTWQnOE9MFmniVFtEa/FZpb3QXjrGQMS0yhbbwJSm9f5vXj
        Wsfu3bv/RKtCPpKzKZDEtfuYzS7iQ8Yd2oZbxsCI5NH4JmGRTUqMNwINh4IGfNGKinnt2G2sXr26glaD
        vCR3U+AALTA62eyLUr39AkBj1GLg+ynwIWWpMb6moaBt6AO/kAjmNSMpKSmdtArkJ7mbAsHWAN+pzSpc
        BJ/ezif9NutcW6Cp6wSljx/zWhEfH5/upKSke2gVyE/2YApEU9dlbhFJAFcdF29tum3hbLTBF6Klf9rE
        3D1mjJ+fn27nzp0/o1UgP9mLKRCc5mYtORtQeApdjfA4QM2tfRqjQQHpLjBvc+MfU9zc3HQlJSW/oNUg
        L9mTKRBtfTdpmtmjeT1onGjNetAes/4ejAISXUTlrmHOwN4JNMauXbuW0KqQj+zNFAiGoiGJWXf8VmJ3
        E7a4CHKrfhBmSVlpjQR8HjS36hqEpWkH7dKGAu7gTktLy6bVIQ/ZoykQnLBK+ajG7KSQMQMzo96wgLQe
        2fvPC3MHwxl74DMn2OqoD1yAaG2FEAnd6RXQCFY46++m4LJ5cXHxT7RKbC97NYUAGTfgfkd8Efud3pF9
        CwW4u84SuiB8nXN0wQZIKq+C9O3NkPl5K2QQ0j9thmTyN/wsOCGDhL3+4EHOwXPZad4OzkGEh4f3Y4QR
        GBjIPIZFcJiq50Rr6+O0amwnuzYFBb/1GXu+AaXSZ8g/v2ANMDQm4SZUVVUV0eK9CwDuJtFGC+t4Y2a4
        uMILk9+FJ1+drCsrL7etMRzBFHqEkHDHl8IcwdBbDsvBl6z4+wfA3r1780iR3j1QsrcrPT39JHYTpucq
        SVc0ZcZMeGHKNPgn5YmXJ+lcA8L+SE8dfTmSKfTg74epD14VfkEQB6ND+U2Q4SKYjqQ9P0kNOYevQcEQ
        fkOstLR0v/E4Q6n0gonvvGcwgzHjJ07RrSrfuJSeOrpyRFMYIIPRgTfsnwVVxjLhh+AUJFwdSSuC52DY
        ia0QPvKXue+ckDbmgXkN9dcGs7KyfHErvzcxxEtTZzANoeeZ19+CeVFxWnrq6MmhTWGMYBCMJLpIBHIR
        kjdUC2/9xwkn/L0O4eEcbzIm8fYV1lPwb/i0e4R6NRmIHoasfR3C5BmmoTeCMcP5Ccpt27YFPjVxCtMI
        pjz3r3cgIS37Mj11dOQ0pjDLQGuiqcduxwhsBYbxqOJwf5f0397eY56aMLmfZQRTcADq4hN8kZ5qfXFT
        SMNIfqw2p7R0zEtTp+tYRjAFjfHym+9faGpvH0NPt564KaRhpL9gfObMmftnevkzjcBk8ru6lRs2jKOn
        W0fcFNIwUlPoNS9swSkcPzCNYMI/Jr6h8wgP/x09VXptauk7lP1FN3AsI7faMlOgCpevOvnMa28yjWAK
        MQasXF++nJ4qrXDGLSkJ7uFYBpYjLVKLFBWfPGf8hKFFJs+SkDUwMm4VPZXLkbV5x27XoRoDB6DRqRny
        eP8ml3WFi2nPT3qbaQRTXnxjOryn8OfGcAqRLmnSjNlMI5iCxnh56oz+tra2v9CzuRxVlZWVP3992qyT
        LCOYgsZ4+rU3dcvKbLzKyjU6ClBFffM8GT+wzGDM8ySs9Q+Pks9vh3BZV5qipWeeG2Sc8Sz5LFWd30YP
        53IW+YdGKsZPnCoyBM5bxKdmqOlhXM6m0rK1XuMnTDYY4u+vTAYSxmrox1zOqpkzZ/7yadI6/O2lSRAa
        nfQY/TOXsys8POfejz/e/ij9Xy4uLi4uLi4uK+quu/4PocgFPHkgjaMAAAAASUVORK5CYII=
</value>
  </data>
</root>